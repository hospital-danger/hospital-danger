// Generated by CoffeeScript 1.6.1
(function() {
  var _base, _ref, _ref1;

  if ((_ref = this.console) == null) {
    this.console = {};
  }

  if ((_ref1 = (_base = this.console).log) == null) {
    _base.log = function() {};
  }

  $(function() {
    var $buffer_bar, $play_button, $time_bar, $time_left, $video, chapter_index, chapters, citations, cue, cues, current_time, duration, goto_chapter, time_line, to_clock, to_s, _i, _len;
    $video = Popcorn('#the-video');
    $play_button = $('.button-play');
    $time_bar = $('.time-bar');
    $buffer_bar = $('.buffer_bar');
    $time_left = $('.time-left');
    duration = 0;
    current_time = 0;
    chapter_index = 0;
    to_s = Popcorn.util.toSeconds;
    to_clock = function(seconds) {
      var min, s;
      min = Math.floor(seconds / 60);
      s = seconds % 60;
      min = min > 9 ? "" + min : "0" + min;
      s = s > 9 ? "" + s : "0" + s;
      return "" + min + ":" + s;
    };
    cues = [
      {
        type: "chapter",
        title: "A Safe Place",
        target: "#safety",
        time: "00:10"
      }, {
        type: "chapter",
        title: "Quality of Care",
        target: "#quality-of-care",
        time: "00:20"
      }, {
        type: "chapter",
        title: "Deceptively Simple",
        target: "#infection",
        time: "00:30"
      }, {
        type: "chapter",
        title: "Deny & Defend",
        target: "#culpability",
        time: "00:40"
      }, {
        type: "chapter",
        title: "Malpractice in Practice",
        target: "#lawsuit",
        time: "00:50"
      }, {
        type: "chapter",
        title: "Is It Getting Better?",
        target: "#no-improvement",
        time: "01:00"
      }
    ];
    chapters = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = cues.length; _i < _len; _i++) {
        cue = cues[_i];
        if (cue.type === "chapter") {
          _results.push(cue);
        }
      }
      return _results;
    })();
    citations = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = cues.length; _i < _len; _i++) {
        cue = cues[_i];
        if (cue.type === "citation") {
          _results.push(cue);
        }
      }
      return _results;
    })();
    for (_i = 0, _len = chapters.length; _i < _len; _i++) {
      cue = chapters[_i];
      $('ul', '.chapter-list').append("<li><a href='" + cue.target + "'>" + cue.title + "</a></li>");
    }
    $play_button.add('#the-video').on("click", function() {
      if ($play_button.hasClass("paused")) {
        $video.play();
      } else {
        $video.pause();
      }
      return $play_button.toggleClass("paused");
    });
    $('.progress').on("click", function(e) {
      var pos;
      pos = e.offsetX / $(this).width();
      return $video.currentTime(pos * duration);
    });
    goto_chapter = function(target) {
      var cue_time, index, _j, _len1, _ref2;
      for (index = _j = 0, _len1 = cues.length; _j < _len1; index = ++_j) {
        cue = cues[index];
        if (cue.target === target) {
          _ref2 = [index, to_s(cue.time)], chapter_index = _ref2[0], cue_time = _ref2[1];
        }
      }
      if (cue_time != null) {
        $video.currentTime(cue_time).pause();
      }
      return $play_button.addClass('paused');
    };
    $('a', '.chapter-list').on("click", function(e) {
      e.preventDefault();
      return goto_chapter($(this).attr('href'));
    });
    $(document).on("keydown", function(e) {
      var left_arrow, next_chapter, right_arrow, _ref2;
      left_arrow = 37;
      right_arrow = 39;
      if (e.keyCode === left_arrow) {
        e.preventDefault();
        next_chapter = Math.max(0, chapter_index - 1);
      } else if (e.keyCode === right_arrow) {
        e.preventDefault();
        next_chapter = Math.min(chapters.length - 1, chapter_index + 1);
      }
      return goto_chapter((_ref2 = chapters[next_chapter]) != null ? _ref2.target : void 0);
    });
    $.each(cues, function(i, cue_item) {
      return $video.cue(to_s(cue_item.time), function() {
        $('.current', ".element").removeClass('current');
        return $(cue_item.target).addClass('current');
      });
    });
    return (time_line = function() {
      current_time = $video.currentTime();
      duration = $video.duration() || 0;
      $time_bar.css({
        left: "" + (current_time / duration * 100) + "%"
      });
      $time_left.text(to_clock(Math.floor(duration - current_time)));
      return setTimeout(time_line, 200);
    })();
  });

}).call(this);
